{"version":3,"file":"static/js/362.a5969e5c.chunk.js","mappings":"sLAGA,MAAMA,EAAWC,IAAA,IAAC,MAChBC,EAAK,KAAEC,EAAI,MAAEC,EAAK,OAAEC,GACrBJ,EAAA,OACCK,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,MAAM,MAAKF,SAAEL,KACjBM,EAAAA,EAAAA,KAAA,MAAAD,SAAKJ,GAAOK,EAAAA,EAAAA,KAAA,KAAGE,KAAMP,EAAKI,SAAEF,EAAOD,KAAcC,EAAOD,OACrD,EAcPJ,EAASW,aAAe,CACtBN,OAASO,GAAMA,EACfT,KAAM,KACNC,MAAO,MAGT,UCOA,EA/BcH,IAAA,IAAC,KAAEY,GAAMZ,EAAA,OACrBO,EAAAA,EAAAA,KAAA,SAAAD,UACEC,EAAAA,EAAAA,KAAA,SAAAD,SACGM,EAAKC,KAAKC,IACTP,EAAAA,EAAAA,KAACR,EAAQ,CACPK,OAAQU,EAAKV,OAEbH,MAAOa,EAAKb,MACZC,KAAMY,EAAKZ,KACXC,MAAOW,EAAKX,OAHPW,EAAKb,YAOV,EChBJc,EAAMA,KACV,MAAOC,EAAKC,IAAUC,EAAAA,EAAAA,YActB,OANAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQC,aAAY,IAPfC,MACX,MACMC,EAAY,IAAIC,KAAK,uBAC3BP,IAASO,KAAKC,MAAQF,GAFN,oBAE4BG,QAAQ,IAAI,EAIxBJ,IAAQ,IACxC,MAAO,KACLK,cAAcP,EAAM,CACrB,GACA,KACIb,EAAAA,EAAAA,KAAAqB,EAAAA,SAAA,CAAAtB,SAAGU,GAAO,EAqBnB,EAlBa,CACX,CACEa,IAAK,MACL5B,MAAO,cACPE,OAAOI,EAAAA,EAAAA,KAACQ,EAAG,KAEb,CACEc,IAAK,YACL5B,MAAO,oBACPE,MAAO,GAET,CACE0B,IAAK,WACL5B,MAAO,eACPE,MAAO,qBCvBX,EAPsB2B,KACpBzB,EAAAA,EAAAA,MAAAuB,EAAAA,SAAA,CAAAtB,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yBACJC,EAAAA,EAAAA,KAACwB,EAAK,CAACnB,KAAMA,OCMjB,EATa,CAEX,CACEX,MAAO,4CACPE,MAAO,OACPD,KAAM,sCC4BV,EAhCc8B,KACZ,MAAOpB,EAAMqB,IAAmBf,EAAAA,EAAAA,UAASgB,GAEnCC,GAAYC,EAAAA,EAAAA,cAAYC,UAE5B,MAAMC,QAAYC,MAChB,wEAEIC,QAAgBF,EAAIG,OAC1BR,EACEC,EAAYrB,KAAK6B,IAAK,IACjBA,EAEHvC,MAAOwC,OAAOC,KAAKJ,GAASK,SAASH,EAAMb,KACvCW,EAAQE,EAAMb,KACda,EAAMvC,UAEb,GACA,IAMH,OAJAgB,EAAAA,EAAAA,YAAU,KACRgB,GAAW,GACV,CAACA,KAGF9B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gCACJC,EAAAA,EAAAA,KAACwB,EAAK,CAACnB,KAAMA,MACT,ECNV,EAnBcoB,KACZzB,EAAAA,EAAAA,KAACuC,EAAAA,EAAI,CACHC,MAAM,QACNC,YAAY,4BAA2B1C,UAEvCD,EAAAA,EAAAA,MAAA,WAAS4C,UAAU,OAAOC,GAAG,QAAO5C,SAAA,EAClCC,EAAAA,EAAAA,KAAA,UAAAD,UACEC,EAAAA,EAAAA,KAAA,OAAK0C,UAAU,QAAO3C,UACpBC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAC4C,EAAAA,GAAI,CAACC,GAAG,SAAQ9C,SAAC,iBAIxBC,EAAAA,EAAAA,KAAC8C,EAAQ,KACT9C,EAAAA,EAAAA,KAAC+C,EAAI,Q","sources":["components/Stats/TableRow.js","components/Stats/Table.js","data/stats/personal.js","components/Stats/Personal.js","data/stats/site.js","components/Stats/Site.js","pages/Stats.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TableRow = ({\r\n  label, link, value, format,\r\n}) => (\r\n  <tr>\r\n    <td width=\"70%\">{label}</td>\r\n    <td>{link ? <a href={link}>{format(value)}</a> : format(value)}</td>\r\n  </tr>\r\n);\r\n\r\nTableRow.propTypes = {\r\n  format: PropTypes.func,\r\n  label: PropTypes.string.isRequired,\r\n  link: PropTypes.string,\r\n  value: PropTypes.oneOfType([\r\n    PropTypes.element,\r\n    PropTypes.number,\r\n    PropTypes.string,\r\n  ]),\r\n};\r\n\r\nTableRow.defaultProps = {\r\n  format: (x) => x,\r\n  link: null,\r\n  value: null,\r\n};\r\n\r\nexport default TableRow;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TableRow from './TableRow';\r\n\r\nconst Table = ({ data }) => (\r\n  <table>\r\n    <tbody>\r\n      {data.map((pair) => (\r\n        <TableRow\r\n          format={pair.format}\r\n          key={pair.label}\r\n          label={pair.label}\r\n          link={pair.link}\r\n          value={pair.value}\r\n        />\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTable.propTypes = {\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      format: PropTypes.func,\r\n      label: PropTypes.string.isRequired,\r\n      link: PropTypes.string,\r\n      value: PropTypes.oneOfType([\r\n        PropTypes.element,\r\n        PropTypes.number,\r\n        PropTypes.string,\r\n      ]),\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst Age = () => {\r\n  const [age, setAge] = useState();\r\n\r\n  const tick = () => {\r\n    const divisor = 1000 * 60 * 60 * 24 * 365.2421897; // ms in an average year\r\n    const birthTime = new Date('2004-04-04T05:30:00');\r\n    setAge(((Date.now() - birthTime) / divisor).toFixed(11));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => tick(), 25);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n  return <>{age}</>;\r\n};\r\n\r\nconst data = [\r\n  {\r\n    key: 'age',\r\n    label: 'Current age',\r\n    value: <Age />,\r\n  },\r\n  {\r\n    key: 'countries',\r\n    label: 'Countries visited',\r\n    value: 3,\r\n  },\r\n  {\r\n    key: 'location',\r\n    label: 'Current city',\r\n    value: 'Hyderabad, India',\r\n  },\r\n];\r\n\r\nexport default data;\r\n","import React from 'react';\r\nimport Table from './Table';\r\nimport data from '../../data/stats/personal';\r\n\r\nconst PersonalStats = () => (\r\n  <>\r\n    <h3>Some stats about me</h3>\r\n    <Table data={data} />\r\n  </>\r\n);\r\n\r\nexport default PersonalStats;\r\n","/* Keys match keys returned by the github api. Fields without keys are\r\n * mostly jokes. To see everything returned by the github api, run:\r\n curl https://api.github.com/repos/AarnavNagariya/aarnavnagariya.github.io\r\n */\r\nconst data = [\r\n\r\n  {\r\n    label: 'Lines of Javascript powering this website',\r\n    value: '2150',\r\n    link: 'https://aarnavnagariya.github.io/',\r\n  },\r\n];\r\n\r\nexport default data;\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\n\r\nimport Table from './Table';\r\nimport initialData from '../../data/stats/site';\r\n\r\nconst Stats = () => {\r\n  const [data, setResponseData] = useState(initialData);\r\n  // TODO think about persisting this somewhere\r\n  const fetchData = useCallback(async () => {\r\n    // request must be authenticated if private\r\n    const res = await fetch(\r\n      'https://api.github.com/repos/AarnavNagariya/aarnavnagariya.github.io',\r\n    );\r\n    const resData = await res.json();\r\n    setResponseData(\r\n      initialData.map((field) => ({\r\n        ...field,\r\n        // update value if value was returned by call to github\r\n        value: Object.keys(resData).includes(field.key)\r\n          ? resData[field.key]\r\n          : field.value,\r\n      })),\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Some stats about this site</h3>\r\n      <Table data={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Main from '../layouts/Main';\r\n\r\nimport Personal from '../components/Stats/Personal';\r\nimport Site from '../components/Stats/Site';\r\n\r\nconst Stats = () => (\r\n  <Main\r\n    title=\"Stats\"\r\n    description=\"Some statistics about Me.\"\r\n  >\r\n    <article className=\"post\" id=\"stats\">\r\n      <header>\r\n        <div className=\"title\">\r\n          <h2>\r\n            <Link to=\"/stats\">Stats</Link>\r\n          </h2>\r\n        </div>\r\n      </header>\r\n      <Personal />\r\n      <Site />\r\n    </article>\r\n  </Main>\r\n);\r\n\r\nexport default Stats;\r\n"],"names":["TableRow","_ref","label","link","value","format","_jsxs","children","_jsx","width","href","defaultProps","x","data","map","pair","Age","age","setAge","useState","useEffect","timer","setInterval","tick","birthTime","Date","now","toFixed","clearInterval","_Fragment","key","PersonalStats","Table","Stats","setResponseData","initialData","fetchData","useCallback","async","res","fetch","resData","json","field","Object","keys","includes","Main","title","description","className","id","Link","to","Personal","Site"],"sourceRoot":""}